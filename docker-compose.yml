version: '3'

services:
  playground-server: # Docker Compose 내에서 서비스 이름은 DNS 이름으로 동작
    container_name: playground-server
    image: playground-server:latest
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 3000
    depends_on:
      - database
      - prometheus
      - grafana
    networks:
      - playground-network

  database:
    container_name: database
    image: mariadb:latest
    ports:
      - "3306:3306"
    volumes:
      - volume-db-data:/var/lib/mysql
      - volume-db-config:/etc/mysql/conf.d
      - volume-initdb:/docker-entrypoint-initdb.d
    environment:
      TZ: Asia/Seoul
    env_file: ./src/config/env/.production.env
    networks:
      - playground-network

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on: # 해당 서비스가 시작되기 전에 다른 서비스가 먼저 시작되어야 함을 지정
      - playground-server
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - playground-network
  
  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - playground-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - playground-network
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    env_file: ./src/config/env/.production.env
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - playground-network

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/redis/data
      o: bind
  volume-initdb:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/mariaDB/initdb.d
      o: bind
  volume-db-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/mariaDB/data
      o: bind
  volume-db-config:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/mariaDB/conf.d
      o: bind
  grafana-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/grafana/data
      o: bind

networks:
  playground-network:
    driver: bridge